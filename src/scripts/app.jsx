import React, { useState, useEffect, useCallback } from "react";

import Header from './header/header';
import Img from "./components/img";
import Text from '../scripts/components/text';

import '../styles/__main';

import avatar from '../img/avatar.jpg';

import Accordeon from "./components/accordeon";
import Container from '../scripts/components/container';
import Button from '../scripts/components/button';

export default function App() {
//   const [uList, setUList] = useState([]);
//   const [inputState, setInputState] = useState("");

//   useEffect(() => {
//     const uListstored = JSON.parse(localStorage.getItem("uList"));
//     const inputStatestored = JSON.parse(localStorage.getItem("inputState"));
//     if (uListstored && uListstored.length > 0) {
//       setUList(uListstored);
//     }
//     if (inputStatestored && inputStatestored !== "") {
//       setInputState(inputStatestored);
//     }
//   }, []);

//   useEffect(() => {
//     localStorage.setItem("uList", JSON.stringify(uList));
//     localStorage.setItem("inputState", JSON.stringify(inputState));
//   }, [uList, inputState]);

//   const handleOnChangeLine = useCallback(
//     (e) => {
//       setInputState(e.target.value);
//     },
//     [inputState]
//   );
  return (
    <>
      <Header>
        <Img src={avatar} alt="avatar" />
      </Header>
      <Text typeTag='h1' id='name'>
        –ï–ö–ê–¢–ï–†–ò–ù–ê –ù–ò–î–ï–ù–¢–ê–õ–¨
      </Text>
      <Text typeTag='p' id='nameDiscription'>
      –î–∏–ø–ª–æ–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∏–Ω–æ–ª–æ–≥, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º, –±—ã—Ç–æ–≤–æ–º—É –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—é –∏ —Ç—Ä—é–∫–æ–≤–æ–π –¥—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∏
      </Text>
      <Container>
        <Button>–ü–û–î–†–û–ë–ù–ï–ï –û–ë–û –ú–ù–ï</Button>
        <Accordeon>
            –ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è üòä<br  /><br  />
      ‚Äå
            –ú–µ–Ω—è –∑–æ–≤—É—Ç –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ù–∏–¥–µ–Ω—Ç–∞–ª—å.<br  /><br  />

            –£–∂–µ 8 –ª–µ—Ç –∑–∞–Ω–∏–º–∞—é—Å—å –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ–º –∏ –¥—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–æ–π —Å–æ–±–∞–∫, –æ–∫–æ–Ω—á–∏–ª–∞ —Å –æ—Ç–ª–∏—á–∏–µ–º –£–¶ "–í–µ–ª–µ—Å" –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ¬´–ö–∏–Ω–æ–ª–æ–≥–∏—è¬ª –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–≤—ã—à–∞—é –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é - —á–∏—Ç–∞—é –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É, –ø–æ—Å–µ—â–∞—é –∫—É—Ä—Å—ã –∏ —Å–µ–º–∏–Ω–∞—Ä—ã —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.<br  /><br  />

            –í —Ä–∞–±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≥—É–º–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã. –î–ª—è –º–µ–Ω—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–±–∞–∫–∏ –∏ –µ—ë –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ.<br  /><br  />

            –Ø –Ω–µ —è–≤–ª—è—é—Å—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ü–µ–π —Ç–µ–æ—Ä–∏–∏ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–µ –ø—Ä–∏–º–µ–Ω—è—é –≤ —Ä–∞–±–æ—Ç–µ –ø–æ–±–æ–∏, —Ä—ã–≤–∫–∏, –∞–ª—å—Ñ–∞-–ø–µ—Ä–µ–≤–æ—Ä–æ—Ç—ã –∏ —Ç–æ–º—É –ø–æ–¥–æ–±–Ω–æ–µ. –ù–µ –∏—Å–ø–æ–ª—å–∑—É—é –∞–≤–µ—Ä—Å–∏–≤–Ω—É—é –∞–º—É–Ω–∏—Ü–∏—é - —É–¥–∞–≤–∫–∏, —Å—Ç—Ä–æ–≥–∏–µ –æ—à–µ–π–Ω–∏–∫–∏, —ç–ª–µ–∫—Ç—Ä–æ—à–æ–∫–æ–≤—ã–µ –æ—à–µ–π–Ω–∏–∫–∏.<br  /><br  />

            –†–∞–±–æ—Ç–∞—é —Å –ª—é–¥—å–º–∏ –∏ –∏—Ö —Å–æ–±–∞–∫–∞–º–∏ –≤—Å–µ—Ö –ø–æ—Ä–æ–¥ –∏ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤.<br  /><br  />
            –ó–∞–Ω–∏–º–∞—é—Å—å –æ—á–Ω–æ –≤ –ï—Ä–µ–≤–∞–Ω–µ, –∞ —Ç–∞–∫–∂–µ –æ–Ω–ª–∞–π–Ω –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.<br  />

            –ë—É–¥—É —Ä–∞–¥–∞ –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ —Å–≤–æ–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö!
        </Accordeon>
      </Container>
      <Text typeTag='h2' id='services'>
        –£—Å–ª—É–≥–∏
      </Text>
      {/* <Form isQuestForm={true}>
        <Input
          type="text"
          placeholder="Add a new task"
          inputState={inputState}
          setInputState={setInputState}
          onChangeLine={handleOnChangeLine} // TODO: USECALLBACK done
        />
        <Button
          type="button"
          uList={uList}
          setUList={setUList}
          inputState={inputState}
          setInputState={setInputState}
        >
          <Img src={plus} alt="plus" />
        </Button>
      </Form>
      <Form isQuestForm={false}>
        <Counter uList={uList} />
        <Preview uList={uList} />
        <Task uList={uList} setUList={setUList} />
      </Form> */}
    </>
  );
}
